name: Manual Deploy to Cloudflare Pages

on:
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch to deploy"
        required: true
        default: main

permissions:
  contents: read

jobs:
  deploy:
    name: Manual Deploy to Cloudflare
    runs-on: ubuntu-latest
    if: github.repository == 'KotonoSora/nara-vite-react-boilerplate'
    environment: production

    steps:
      - name: Validate required secrets
        run: |
          missing=()
          [ -z "${{ secrets.CLOUDFLARE_API_TOKEN }}" ] && missing+=("CLOUDFLARE_API_TOKEN")
          [ -z "${{ secrets.CLOUDFLARE_ACCOUNT_ID }}" ] && missing+=("CLOUDFLARE_ACCOUNT_ID")
          [ -z "${{ secrets.D1_DATABASE_ID }}" ] && missing+=("D1_DATABASE_ID")
          [ -z "${{ secrets.D1_DATABASE_NAME }}" ] && missing+=("D1_DATABASE_NAME")

          if [ ${#missing[@]} -ne 0 ]; then
            echo "‚ùå Missing secrets: ${missing[*]}"
            exit 1
          fi

      - name: Checkout branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Setup Bun cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install project dependencies
        run: bun install --frozen-lockfile

      - name: Disable wrangler telemetry
        run: bun wrangler telemetry disable

      - name: Inject D1 config
        run: |
          sed -i "s|your-database-name|${{ secrets.D1_DATABASE_NAME }}|g" wrangler.jsonc
          sed -i "s|your-database-id|${{ secrets.D1_DATABASE_ID }}|g" wrangler.jsonc
          sed -i "s|your-database-id|${{ secrets.D1_DATABASE_ID }}|g" drizzle.config.ts

      - name: Inject domain config
        run: |
          sed -i "s|your-prod-domain.com|${{ vars.VITE_PROD_DOMAIN }}|g" wrangler.jsonc
          sed -i "s|your-dev-domain.com|${{ vars.VITE_DEV_DOMAIN }}|g" wrangler.jsonc

      - name: Generate Wrangler types
        run: bun run wrangler types

      - name: Run D1 migrations
        run: bun run db:migrate-production

      - name: Deploy to Cloudflare Pages
        run: |
          if [ "${GITHUB_REF##*/}" = "main" ]; then
            CLOUDFLARE_ENV=production bun run build
            CLOUDFLARE_ENV=production bun run deploy -- --env=""
          else
            CLOUDFLARE_ENV=development bun run build
            CLOUDFLARE_ENV=development bun run deploy -- --env=""
          fi

    env:
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      D1_DATABASE_ID: ${{ secrets.D1_DATABASE_ID }}
      D1_DATABASE_NAME: ${{ secrets.D1_DATABASE_NAME }}
      NODE_ENV: production
      ADMIN_REGISTRATION_SECRET: ${{ secrets.ADMIN_REGISTRATION_SECRET }}
      VITE_MAX_USERS: ${{ vars.VITE_MAX_USERS }}
      VITE_LANDING_PAGE_TITLE: ${{ vars.VITE_LANDING_PAGE_TITLE }}
      VITE_LANDING_PAGE_DESCRIPTION: ${{ vars.VITE_LANDING_PAGE_DESCRIPTION }}
      VITE_LANDING_PAGE_REPOSITORY: ${{ vars.VITE_LANDING_PAGE_REPOSITORY }}
      VITE_LANDING_PAGE_COMMERCIAL_LINK: ${{ vars.VITE_LANDING_PAGE_COMMERCIAL_LINK }}
